main {
    display: flex;
    flex-direction: column;
    gap: 4rem;
}

.intro {
    display: grid;
    grid-template-columns: 20rem 1fr;
    gap: 2rem;
    background-color: var(--bg-sec);
    padding: 1rem;
    border: 1px solid var(--fc-prim);
}

.intro img {
    background-color: green;
    height: 30rem;
}

.intro div {
    display: flex;
    flex-direction: column;
    justify-content: space-between;
}

.timeline {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    gap: 1rem;
}

@media screen and (orientation: landscape) and (min-width: 1200px) {
    .timeline {
        grid-template-rows: 1fr 2px 1fr;
    }

    .tl {
        width: 100%;
        height: 2px;
        grid-row: 2 / 3;
        grid-column: 1 / 6;
    }   
    
    .tlItem:nth-child(odd) {
        grid-row: 1 / 2;
    }

    .tlItem:nth-child(even) {
        grid-row: 3 / 4;
    }

    .tlItem:nth-child(2) {
        grid-column: 2 / 3;
    }

    .tlItem:nth-child(4) {
        grid-column: 4 / 5;
    }

    .tlItem:nth-child(1) {
        grid-column: 1 / 2;
        grid-row: 1 / 2;
    }

    .tlItem:nth-child(3) {
        grid-column: 3 / 4;
    }

    .tlItem:nth-child(5) {
        grid-column: 5 / 6;
    }
    .tlItem {
        --sizeOfConnector: calc(sqrt(2) * 1rem);
    
        background-color: var(--bg-sec);
        padding: 1rem 1rem 2rem 1rem;
        position: relative;
        border: 1px solid var(--fc-prim);
        display: flex;
        flex-direction: column;
    }
    
    .connector {
        width: var(--sizeOfConnector);
        height: var(--sizeOfConnector);
        align-self: center;
        position: absolute;
        background-color: var(--bg-sec);
        display: flex;
        align-items: center;
        justify-content: center;
    }
    
    .connector::before {
        width: 1rem;
        height: 1rem;
        background-color: var(--acc);
        content: "";
        position: absolute;
        border-radius: 1rem;
    }
    
    .tlItem:nth-child(odd) > .connector {
        bottom: 0;
        transform: translateY(50%) rotate(45deg);
        border-right: 1px solid var(--fc-prim);
        border-bottom: 1px solid var(--fc-prim);
    }
    
    .tlItem:nth-child(odd) > .connector::before {
        transform: translate(0.85rem, 0.85rem) rotate(-45deg);
    }
    
    .tlItem:nth-child(even) > .connector {
        top: 0;
        transform: translateY(-50%) rotate(-45deg);
        border-right: 1px solid var(--fc-prim);
        border-top: 1px solid var(--fc-prim);
    }
    
    .tlItem:nth-child(even) > .connector::before {
        transform: translate(0.85rem, -0.85rem) rotate(45deg);
    }
}
    
.tl {
    background-color: var(--acc);
}

.trisplit {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    gap: 1rem;
}

.trisplit > div {
    background-color: var(--bg-sec);
    padding: 1rem;
    border: 1px solid var(--fc-prim);
}

@media screen and (orientation: portrait) {
    .trisplit div {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .trisplit {
        grid-template-columns: 1fr;
    }
}

@media screen and (max-width: 1200px), screen and (orientation: portrait) {
    .intro {
        grid-template-columns: 1fr;
    }
    
    .intro div {
        gap: 1rem;
    }
    
    .timeline {
        grid-template-columns: 2px 1fr;
        grid-template-rows: repeat(5, 1fr);
    }

    .tlItem {
        grid-column: 2 / 3;
        background-color: var(--bg-sec);
        border: 1px solid var(--fc-prim);
        padding: 1rem;
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

    .tl {
        width: 2px;
        height: 100%;
        grid-row: 1 / 6;
    }
}

@media screen and (max-width: 1200px) {
    .trisplit {
        grid-template-columns: repeat(2, 1fr)
    }
}